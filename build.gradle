buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'org.liquibase:liquibase-core:4.33.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.liquibase.gradle' version '3.0.2'
    id "com.github.ben-manes.versions" version "0.52.0"
    id "com.autonomousapps.dependency-analysis" version "2.19.0"
}


dependencyManagement {
    imports {
        mavenBom "io.opentelemetry:opentelemetry-bom:1.53.0"
        mavenBom "io.opentelemetry:opentelemetry-bom-alpha:1.53.0-alpha" // alpha BOM 추가
    }
}

group = 'com.chihuahua'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.18.0'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf:thymeleaf-spring6:3.1.1.RELEASE'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-gson:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'net.nurigo:sdk:4.3.2'
    implementation "io.netty:netty-resolver-dns-native-macos:4.1.96.Final:osx-aarch_64"
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'

    implementation 'com.google.firebase:firebase-admin:9.5.0'
    implementation 'com.nimbusds:nimbus-jose-jwt:10.4.1'

    implementation("io.opentelemetry:opentelemetry-api")
    implementation("io.opentelemetry:opentelemetry-sdk")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp")
    implementation("io.opentelemetry:opentelemetry-api-incubator")
    implementation("io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter:2.16.0")
    implementation 'org.liquibase:liquibase-core:4.33.0'
    liquibaseRuntime 'org.liquibase:liquibase-core:4.33.0'
    liquibaseRuntime 'org.apache.commons:commons-lang3:3.18.0'
    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:4.0.1'
    liquibaseRuntime 'info.picocli:picocli:4.7.7'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate6:4.33.0'
    liquibaseRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    liquibaseRuntime "ch.qos.logback:logback-core:1.5.18"
    liquibaseRuntime "ch.qos.logback:logback-classic:1.5.18"
    liquibaseRuntime sourceSets.main.output
    liquibaseRuntime sourceSets.main.runtimeClasspath
}


test {
    useJUnitPlatform()

    // 테스트 로깅 설정
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams true

        // 각 테스트의 정보 출력
        info {
            events "started", "passed", "skipped", "failed", "standardOut", "standardError"
            displayGranularity 2
        }
    }
    jvmArgs = [
            '-XX:+EnableDynamicAgentLoading',
            '-Xlog:cds=off'  // CDS 관련 로그만 비활성화 (Java 21 호환)
    ]
    // 테스트가 실패해도 모든 테스트 실행
    ignoreFailures = true
}


tasks.getByName("jar").enabled = false

// ===== Liquibase custom tasks (Dev: sobok_dev_local) =====
import java.nio.file.Files
import java.nio.file.Paths

def LB_MAIN = 'liquibase.integration.commandline.Main'
def DB_URL_DEV = (findProperty('liquibase.url') ?: 'jdbc:mysql://localhost:3306/sobok_dev_local?useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=utf8')
def DB_USER_DEV = (findProperty('liquibase.username') ?: 'root')
def DB_PASS_DEV = (findProperty('liquibase.password') ?: 'root')
def DB_DRIVER = (findProperty('liquibase.driver') ?: 'com.mysql.cj.jdbc.Driver')
def MASTER_FILE = (findProperty('liquibase.changeLogFile') ?: 'src/main/resources/db/changelog/db.changelog-master.xml')
def HIB_REF_URL = (findProperty('liquibase.referenceUrl') ?: 'hibernate:spring:com.chihuahua.sobok?dialect=org.hibernate.dialect.MySQLDialect')

tasks.register('lbUpdateDev', JavaExec) {
    group = 'liquibase'
    description = 'Liquibase UPDATE against sobok_dev_local'
    mainClass.set(LB_MAIN)
    classpath = configurations.liquibaseRuntime
    workingDir = projectDir
    args = [
            "--changeLogFile=${MASTER_FILE}",
            "--url=${DB_URL_DEV}",
            "--username=${DB_USER_DEV}",
            "--password=${DB_PASS_DEV}",
            "--driver=${DB_DRIVER}",
            "--contexts=dev",
            'update'
    ]
}

// Generate a changelog (diff) from Hibernate -> DB (sobok_dev_local)
tasks.register('lbDiffDev', JavaExec) {
    group = 'liquibase'
    description = 'Liquibase DIFF-CHANGELOG (Hibernate -> sobok_dev_local)'
    mainClass.set(LB_MAIN)
    classpath = configurations.liquibaseRuntime
    workingDir = projectDir

    doFirst {
        def timestamp = new Date().format('yyyyMMdd-HHmmss')
        def outFile = "src/main/resources/db/changelog/auto/db.changelog-hibernate-dev-${timestamp}.yml"
        Files.createDirectories(Paths.get(outFile).getParent())
        ext.outFile = outFile

        args = [
                "--changeLogFile=${ext.outFile}",
                "--url=${DB_URL_DEV}",
                "--username=${DB_USER_DEV}",
                "--password=${DB_PASS_DEV}",
                "--driver=${DB_DRIVER}",
                "--referenceUrl=${HIB_REF_URL}",
                "--defaultSchemaName=sobok_dev_local",
                "--referenceDefaultSchemaName=sobok_dev_local",
                "--diffTypes=tables,columns,foreignKeys,indexes,uniqueConstraints",
                "--excludeObjects=column:account.interest",
                'diffChangeLog'
        ]
    }
}

