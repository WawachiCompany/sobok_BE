services:
  app:
    build:
        context: .
        args:
          SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_REDIS_HOST: ${SPRING_REDIS_HOST}
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}
      SPRING_REDIS_PASSWORD: ${SPRING_REDIS_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      COOLSMS_API_KEY: ${COOLSMS_API_KEY}
      COOLSMS_API_SECRET: ${COOLSMS_API_SECRET}
      COOLSMS_API_FROM: ${COOLSMS_API_FROM}
#    depends_on:
#      - mysql
#      - redis

#  mysql:
#    image: mysql:8.0
#    container_name: mysql-db
#    restart: always
#    env_file:
#      - .env
#    environment:
#      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
#    ports:
#      - "3306:3306"
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 10s
#      timeout: 5s
#      retries: 3
#
#  redis:
#    image: redis:latest
#    container_name: redis-cache
#    restart: always
#    environment:
#      REDIS_PASSWORD: ${SPRING_REDIS_PASSWORD}
#    command: redis-server --requirepass ${SPRING_REDIS_PASSWORD}
#    ports:
#      - "6379:6379"
#    healthcheck:
#      test: [ "CMD", "redis-cli", "ping" ]
#      interval: 10s
#      timeout: 5s
#      retries: 3