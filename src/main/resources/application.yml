spring:
  jackson:
    time-zone: Asia/Seoul
  application:
    name: sobok

  # JPA Repository와 Redis Repository 구분을 위한 설정
  data:
    jpa:
      repositories:
        enabled: true
    redis:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      password: ${SPRING_REDIS_PASSWORD}
      timeout: 6000
      repositories:
        enabled: false  # Redis Repository 기능 비활성화

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    properties:
      hibernate:
        show_sql: false
        use_sql_comments: true
    hibernate:
      ddl-auto: update
    open-in-view: false
coolsms:
  apiKey: ${COOLSMS_API_KEY}
  apiSecret: ${COOLSMS_API_SECRET}
  apiFrom: ${COOLSMS_API_FROM}
server:
  forward-headers-strategy: framework
  tomcat:
    remoteip:
      remote-ip-header: x-forwarded-for
      protocol-header: x-forwarded-proto
  servlet:
    encoding:
      charset: UTF-8

firebase:
  config:
    path: ${FIREBASE_CONFIG_PATH:src/main/resources/firebase-adminsdk.json}

openai:
  api:
    key: ${OPENAI_API_KEY}
    url: ${OPENAI_API_URL}
social-login:
  provider:
    apple:
      client-id: "com.wawachi.sobok"  # 일관된 클라이언트 ID 사용
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  prometheus:
    metrics:
      export:
        enabled: true
otel:
  exporter:
    otlp:
      endpoint: http://158.179.169.43:4317
      protocol: grpc
  metrics:
    exporter: otlp
  logs:
    exporter: otlp
  traces:
    exporter: otlp
  sdk:
    disabled: false
---
spring:
  config:
    activate:
      on-profile: dev
firebase:
  config:
    path: src/main/resources/firebase-adminsdk.json
---
spring:
  config:
    activate:
      on-profile: prod
firebase:
  config:
    path: /opt/secrets/firebase-adminsdk.json
